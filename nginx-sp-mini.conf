############## frontend #############
upstream frontend {
    server angular-app-linux:4400;
}
server {
    listen 443 ssl default_server reuseport;
    listen [::]:443 ssl default_server reuseport;

    server_name sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://frontend;
    }
}
############## frontend #############


############## backend #############
upstream backend {
    server service-gateway:1437;
}
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name api.sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/api.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/api.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://backend;
    }
}
############## backend #############


# ############## hls #############
# upstream hls {
#     server llhls-server:59919;
#     keepalive 16;
# }

server {
  listen 443 ssl http2;
  server_name hls.sp-mini.pro;

  root /usr/share/nginx/html/hls;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/hls.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hls.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/hls.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        # CORS preflight response
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin  $http_origin   always;
            add_header Access-Control-Allow-Credentials true          always;
            add_header Access-Control-Allow-Methods    'OPTIONS, GET, HEAD' always;
            add_header Access-Control-Allow-Headers    'Content-Type, Range' always;
            add_header Content-Length                  0               always;
            return 204;
        }
        # proxy_pass http://hls;


        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
        }
        # SNI so OME sees the right hostname
        proxy_ssl_server_name on;
        proxy_ssl_verify      off;

        # Keep the upstream connection open
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_read_timeout  60s;

        # Overwrite any upstream CORS, then add ours
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Credentials;
        add_header Access-Control-Allow-Origin   $http_origin always;
        add_header Access-Control-Allow-Credentials true         always;
        add_header Access-Control-Allow-Methods     'OPTIONS, GET, HEAD' always;
        add_header Access-Control-Allow-Headers     'Content-Type, Range' always;
    }
    location /hls/ {
        alias /usr/share/nginx/html/hls/ovenmediaengine/vod_dumps/;
        types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2t ts;
        }
    }
}
# ############## hls #############



# ############## relay #############
upstream relay {
    server relay-server:3001;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name relay.sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/relay.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/relay.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/relay.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://relay;
        proxy_http_version  1.1;
        proxy_cache         off;
        proxy_buffering     off;
    }
}
# ############## relay #############


############# om_llhls #############
upstream om_llhls {
    server ovenmediaengine:3334;
    keepalive 16;
}

server {
    listen 443 ssl http2;
    server_name om.sp-mini.pro;

    ssl_certificate     /opt/ovenmediaengine/bin/conf/fullchain.pem;
    ssl_certificate_key /opt/ovenmediaengine/bin/conf/privkey.pem;

    # Block any stray socket.io calls
    location /socket.io {
        return 404;
    }

    location / {
        # CORS preflight response
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin  $http_origin   always;
            add_header Access-Control-Allow-Credentials true          always;
            add_header Access-Control-Allow-Methods    'OPTIONS, GET, HEAD' always;
            add_header Access-Control-Allow-Headers    'Content-Type, Range' always;
            add_header Content-Length                  0               always;
            return 204;
        }

        # Main proxy pass (no caching, no buffering)
        proxy_pass          https://om_llhls/;
        proxy_http_version  1.1;
        proxy_cache         off;
        proxy_buffering     off;

        # SNI so OME sees the right hostname
        proxy_ssl_server_name on;
        proxy_ssl_verify      off;

        # Keep the upstream connection open
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_read_timeout  60s;

        # Overwrite any upstream CORS, then add ours
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Credentials;
        add_header Access-Control-Allow-Origin   $http_origin always;
        add_header Access-Control-Allow-Credentials true         always;
        add_header Access-Control-Allow-Methods     'OPTIONS, GET, HEAD' always;
        add_header Access-Control-Allow-Headers     'Content-Type, Range' always;
    }
}
############# om_llhls #############


# ############## coach #############
upstream coach {
    server sp-coach-app:4300;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name coach.sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/coach.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/coach.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/coach.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://coach;
        proxy_http_version  1.1;
        proxy_cache         off;
        proxy_buffering     off;
    }
}
# ############## coach #############



# ############## tag #############
upstream tag {
    server tagging-app-linux:4600;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name tag.sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/tag.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tag.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/tag.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://tag;
        proxy_http_version  1.1;
        proxy_cache         off;
        proxy_buffering     off;
    }
}
# ############## tag #############