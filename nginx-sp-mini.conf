############## frontend #############
upstream frontend {
    server angular-app-linux:4400;
}
server {
    listen 443 ssl default_server reuseport;
    listen [::]:443 ssl default_server reuseport;

    server_name sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://frontend;
    }
}
############## frontend #############


############## backend #############
upstream backend {
    server service-gateway:1437;
}
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name api.sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/api.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/api.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://backend;
    }
}
############## backend #############


# ############## hls #############
upstream hls {
    server llhls-server:59919;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name hls.sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/hls.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hls.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/hls.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://hls;
    }
}
# ############## hls #############



# ############## relay #############
upstream relay {
    server relay-server:3001;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name relay.sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/relay.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/relay.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/relay.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://relay;
    }
}
# ############## relay #############


############# om_llhls #############
upstream om_llhls {
    server ovenmediaengine:3334;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name om.sp-mini.pro;

    # Load your certificate files.
    ssl_certificate /opt/ovenmediaengine/bin/conf/fullchain.pem;
    ssl_certificate_key /opt/ovenmediaengine/bin/conf/privkey.pem;
    ssl_trusted_certificate /opt/ovenmediaengine/bin/conf/chain.pem;

    location / {
        # Intercept and respond to OPTIONS requests (preflight)
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' $http_origin always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }

        # Proxy all other requests to the OvenMediaEngine endpoint.
        proxy_pass https://om_llhls/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Disable buffering for low-latency streaming.
        proxy_buffering off;
        proxy_read_timeout 300;
        proxy_send_timeout 300;
        
        # Add CORS response headers dynamically.
        add_header 'Access-Control-Allow-Origin' $http_origin always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }
}
############# om_llhls #############