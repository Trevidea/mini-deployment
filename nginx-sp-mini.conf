############## frontend #############
upstream frontend {
    server angular-app-linux:4400;
}
server {
    listen 443 ssl default_server reuseport;
    listen [::]:443 ssl default_server reuseport;

    server_name sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://frontend;
    }
}
############## frontend #############


############## backend #############
upstream backend {
    server service-gateway:1437;
}
server {
    listen 443 ssl;
    listen [::]:443 ssl;

    server_name api.sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/api.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/api.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://backend;
    }
}
############## backend #############


# ############## hls #############
upstream hls {
    server llhls-server:59919;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name hls.sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/hls.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/hls.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/hls.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://hls;
    }
}
# ############## hls #############



# ############## relay #############
upstream relay {
    server relay-server:3001;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name relay.sp-mini.pro;

    # Load the certificate files.
    ssl_certificate /etc/letsencrypt/live/relay.sp-mini.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/relay.sp-mini.pro/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/relay.sp-mini.pro/chain.pem;

    # Load the Diffie-Hellman parameter.
    ssl_dhparam /etc/letsencrypt/dhparams/dhparam.pem;

    location / {
        proxy_pass http://relay;
    }
}
# ############## relay #############


############# om_llhls #############
upstream om_llhls {
    # OME is configured with TLS on 3334
    server ovenmediaengine:3334;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name om.sp-mini.pro;

    ssl_certificate       /opt/ovenmediaengine/bin/conf/fullchain.pem;
    ssl_certificate_key   /opt/ovenmediaengine/bin/conf/privkey.pem;
    ssl_trusted_certificate /opt/ovenmediaengine/bin/conf/chain.pem;

    # Block any stray socket.io calls
    location /socket.io {
        return 404;
    }

    location / {
        # CORS preflight
        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin  $http_origin   always;
            add_header Access-Control-Allow-Credentials 'true'      always;
            add_header Access-Control-Allow-Methods    'OPTIONS, GET, HEAD' always;
            add_header Access-Control-Allow-Headers    'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
            add_header Access-Control-Max-Age          1728000        always;
            add_header Content-Length                  0             always;
            add_header Content-Type                    'text/plain charset=UTF-8' always;
            return 204;
        }

        # Proxy to OME over HTTPS
        proxy_pass         https://om_llhls/;
        proxy_http_version 1.1;

        # if your OME TLS cert is self-signed or internal CA, you can disable strict verify
        proxy_ssl_verify       off;
        # or, to verify:
        # proxy_ssl_trusted_certificate /opt/ovenmediaengine/bin/conf/chain.pem;

        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;

        proxy_buffering    off;
        proxy_read_timeout 300;
        proxy_send_timeout 300;

        # Strip any upstream CORS headers
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_hide_header Access-Control-Allow-Credentials;

        # reâ€‘inject valid CORS
        add_header Access-Control-Allow-Origin  $http_origin   always;
        add_header Access-Control-Allow-Credentials 'true'      always;
        add_header Access-Control-Allow-Methods    'OPTIONS, GET, HEAD' always;
        add_header Access-Control-Allow-Headers    'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
    }
}
############# om_llhls #############